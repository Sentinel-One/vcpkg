diff --git a/Release/include/cpprest/http_client.h b/Release/include/cpprest/http_client.h
index 0bedfbd4..2e334a35 100644
--- a/Release/include/cpprest/http_client.h
+++ b/Release/include/cpprest/http_client.h
@@ -53,6 +53,7 @@ typedef void* native_handle;
 #include "pplx/pplxtasks.h"
 #include <limits>
 #include <memory>
+#include <winhttp.h>
 
 #if _WIN32_WINNT >= _WIN32_WINNT_VISTA
 #include "cpprest/oauth1.h"
@@ -154,6 +155,9 @@ public:
     /// <param name="proxy">A reference to the web proxy object.</param>
     void set_proxy(web_proxy proxy) { m_proxy = std::move(proxy); }
 
+    const uint32_t tls_version() const { return m_tls_version; }
+    void set_tls_version(uint32_t tls_version) { m_tls_version = tls_version; }
+
     /// <summary>
     /// Get the client credentials
     /// </summary>
@@ -369,6 +373,8 @@ private:
 
     std::shared_ptr<oauth2::experimental::oauth2_config> m_oauth2;
     web_proxy m_proxy;
+    uint32_t m_tls_version = (WINHTTP_FLAG_SECURE_PROTOCOL_SSL3 | WINHTTP_FLAG_SECURE_PROTOCOL_TLS1 |
+                              WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_1 | WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_2);
     http::client::credentials m_credentials;
     // Whether or not to guarantee ordering, i.e. only using one underlying TCP connection.
     bool m_guarantee_order;
diff --git a/Release/src/http/client/http_client_winhttp.cpp b/Release/src/http/client/http_client_winhttp.cpp
index 249bfcd5..fb0996e6 100644
--- a/Release/src/http/client/http_client_winhttp.cpp
+++ b/Release/src/http/client/http_client_winhttp.cpp
@@ -948,8 +948,7 @@ protected:
 #if _WIN32_WINNT >= _WIN32_WINNT_VISTA
         BOOL win32_result(FALSE);
 
-        DWORD secure_protocols(WINHTTP_FLAG_SECURE_PROTOCOL_SSL3 | WINHTTP_FLAG_SECURE_PROTOCOL_TLS1 |
-                               WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_1 | WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_2);
+        DWORD secure_protocols = client_config().tls_version();
         win32_result = ::WinHttpSetOption(
             m_hSession, WINHTTP_OPTION_SECURE_PROTOCOLS, &secure_protocols, sizeof(secure_protocols));
         if (FALSE == win32_result)
